{"mappings":"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","sources":["src/script.js"],"sourcesContent":["const apiKey = '91574a6ba1164bd5a7cb766c4251213b';\r\nlet baseUrl = `https://api.rawg.io/api/games?key=${apiKey}`;\r\nlet currentPage = 1;\r\nlet totalPages = 1;\r\nlet completedGames = JSON.parse(localStorage.getItem('completedGames')) || [];\r\nlet backloggedGames = JSON.parse(localStorage.getItem('backloggedGames')) || [];\r\n// Function to call the API\r\nasync function callAPI(page, query = '') {\r\n    let url = `${baseUrl}&page=${page}`;\r\n    if (query) {\r\n        url += `&search=${query}`;\r\n    }\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(`Network response was not ok: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log(data.results); // Log the array of games\r\n        totalPages = Math.ceil(data.count / data.results.length);\r\n        displayGames(data.results);\r\n        currentPage = page; // Update currentPage after successful fetch\r\n        updatePaginationButtons();\r\n    } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n    }\r\n}\r\n// Function to display games\r\nfunction displayGames(games) {\r\n    const gamesContainer = document.getElementById('games');\r\n    gamesContainer.innerHTML = ''; // Clear previous results\r\n    games.forEach(game => {\r\n        const gameElement = document.createElement('div');\r\n        gameElement.className = 'game';\r\n        const gameImage = document.createElement('img');\r\n        gameImage.src = game.background_image;\r\n        gameImage.alt = `${game.name} cover image`;\r\n        gameImage.addEventListener('click', () => loadGameDetails(game.id)); // Add event listener to load game details\r\n        const gameDetails = document.createElement('div');\r\n        gameDetails.className = 'game-details';\r\n        const gameTitle = document.createElement('div');\r\n        gameTitle.className = 'game-title';\r\n        gameTitle.textContent = game.name;\r\n        const gameReleaseDate = document.createElement('div');\r\n        gameReleaseDate.className = 'game-release-date';\r\n        gameReleaseDate.textContent = `Released: ${game.released}`;\r\n        const gamePlatforms = document.createElement('div');\r\n        gamePlatforms.className = 'game-platforms';\r\n        gamePlatforms.textContent = `Available Platforms: ${game.platforms.map(p => p.platform.name).join(', ')}`;\r\n        const gameGenres = document.createElement('div');\r\n        gameGenres.className = 'game-genres';\r\n        gameGenres.textContent = `Genres: ${game.genres.map(g => g.name).join(', ')}`;\r\n        const markAsCompletedButton = document.createElement('button');\r\n        markAsCompletedButton.className = 'btn-completed';\r\n        markAsCompletedButton.textContent = 'Mark as Completed';\r\n        markAsCompletedButton.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            markAsCompleted(game);\r\n            alert('Game marked as completed.');\r\n        });\r\n        const markAsBackloggedButton = document.createElement('button');\r\n        markAsBackloggedButton.className = 'btn-backlogged';\r\n        markAsBackloggedButton.textContent = 'Mark as Backlogged';\r\n        markAsBackloggedButton.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            markAsBacklogged(game);\r\n            alert('Game marked as backlogged.');\r\n        });\r\n        gameDetails.appendChild(gameTitle);\r\n        gameDetails.appendChild(gameReleaseDate);\r\n        gameDetails.appendChild(gamePlatforms);\r\n        gameDetails.appendChild(gameGenres);\r\n        gameDetails.appendChild(markAsCompletedButton);\r\n        gameDetails.appendChild(markAsBackloggedButton);\r\n        gameElement.appendChild(gameImage);\r\n        gameElement.appendChild(gameDetails);\r\n        gamesContainer.appendChild(gameElement);\r\n    });\r\n}\r\n// Function to update pagination buttons\r\nfunction updatePaginationButtons() {\r\n    for (let i = 1; i <= 8; i++) { // Assuming you have 8 buttons\r\n        const button = document.getElementById(`page-${i}`);\r\n        if (button) {\r\n            button.disabled = (i === currentPage);\r\n            button.style.display = i <= totalPages ? 'inline-block' : 'none'; // Show only the necessary buttons\r\n        }\r\n    }\r\n}\r\n// Function to load game details\r\nasync function loadGameDetails(gameId, fromProfile = false, profileSection = '') {\r\n    const profileParam = fromProfile ? `&fromProfile=true&profileSection=${profileSection}` : '';\r\n    history.pushState({}, '', `?game=${gameId}${profileParam}`); // Use history.pushState to update the URL without reloading\r\n    const gamesContainer = document.getElementById('games');\r\n    const gameDetailsContainer = document.getElementById('game-details');\r\n    const profilePageContainer = document.getElementById('profile-page');\r\n    const decadeDropdown = document.getElementById('decadeDropdown');\r\n    const filterDropdown = document.getElementById('filterDropdown');\r\n    const clearFiltersButton = document.getElementById('clearFiltersButton');\r\n    const gameListTitle = document.getElementById('gameListTitle'); // Get the game list title element\r\n    gamesContainer.style.display = 'none';\r\n    gameDetailsContainer.style.display = 'block';\r\n    profilePageContainer.style.display = 'none';\r\n    decadeDropdown.style.display = 'none';\r\n    filterDropdown.style.display = 'none';\r\n    clearFiltersButton.style.display = 'none';\r\n    gameListTitle.style.display = 'none'; // Hide the game list title\r\n    try {\r\n        const response = await fetch(`https://api.rawg.io/api/games/${gameId}?key=${apiKey}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Network response was not ok: ${response.statusText}`);\r\n        }\r\n        const game = await response.json();\r\n        const developers = game.developers ? game.developers.map(dev => dev.name).join(', ') : 'N/A';\r\n        const publishers = game.publishers ? game.publishers.map(pub => pub.name).join(', ') : 'N/A';\r\n        const metascore = game.metacritic !== null ? game.metacritic : 'N/A';\r\n\r\n        // Check if the game is completed\r\n        const isCompleted = completedGames.some(g => g.id === game.id);\r\n        let ratingHtml = '';\r\n\r\n        if (isCompleted) {\r\n            const savedRating = localStorage.getItem(`rating-${game.id}`) || 0;\r\n            ratingHtml = `\r\n                <div class=\"rating\">\r\n                    <span>Rate this game: </span>\r\n                    ${[1, 2, 3, 4, 5].map(rating => `\r\n                        <input type=\"radio\" id=\"star${rating}\" name=\"rating\" value=\"${rating}\" ${rating == savedRating ? 'checked' : ''} />\r\n                        <label for=\"star${rating}\" class=\"rating-star\">&#9733;</label>\r\n                    `).join('')}\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        gameDetailsContainer.innerHTML = `\r\n            <div class=\"game-details-page\">\r\n                <h2>${game.name}</h2>\r\n                <img src=\"${game.background_image}\" alt=\"${game.name} cover image\" />\r\n                <p><strong>Released:</strong> ${game.released}</p>\r\n                <p><strong>Available Platforms:</strong> ${game.platforms.map(p => p.platform.name).join(', ')}</p>\r\n                <p><strong>Genres:</strong> ${game.genres.map(g => g.name).join(', ')}</p>\r\n                <p><strong>Developers:</strong> ${developers}</p>\r\n                <p><strong>Publishers:</strong> ${publishers}</p>\r\n                <p><strong>Metascore:</strong> ${metascore}</p>\r\n                <p>${game.description_raw}</p>\r\n                ${ratingHtml}\r\n                <button class=\"btn btn-secondary mt-2\" onclick=\"goBack()\">Go Back</button>\r\n            </div>\r\n        `;\r\n\r\n        if (isCompleted) {\r\n            const ratingInputs = document.querySelectorAll('input[name=\"rating\"]');\r\n            ratingInputs.forEach(input => {\r\n                input.addEventListener('change', (event) => {\r\n                    localStorage.setItem(`rating-${game.id}`, event.target.value);\r\n                    alert(`You rated this game ${event.target.value} star${event.target.value > 1 ? 's' : ''}`);\r\n                });\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n    }\r\n}\r\n\r\n\r\n\r\n// Function to mark a game as completed\r\nfunction markAsCompleted(game) {\r\n    if (!completedGames.some(g => g.id === game.id)) {\r\n        completedGames.push(game);\r\n        localStorage.setItem('completedGames', JSON.stringify(completedGames));\r\n    } else {\r\n        alert('Game is already marked as completed.');\r\n    }\r\n}\r\n// Function to mark a game as backlogged\r\nfunction markAsBacklogged(game) {\r\n    if (!backloggedGames.some(g => g.id === game.id)) {\r\n        backloggedGames.push(game);\r\n        localStorage.setItem('backloggedGames', JSON.stringify(backloggedGames));\r\n    } else {\r\n        alert('Game is already marked as backlogged.');\r\n    }\r\n}\r\n// Function to display the profile page\r\nfunction displayProfilePage() {\r\n    const gamesContainer = document.getElementById('games');\r\n    const gameDetailsContainer = document.getElementById('game-details');\r\n    const profilePageContainer = document.getElementById('profile-page');\r\n    const profileGamesContainer = document.getElementById('profile-games');\r\n    const decadeDropdown = document.getElementById('decadeDropdown');\r\n    const filterDropdown = document.getElementById('filterDropdown');\r\n    const clearFiltersButton = document.getElementById('clearFiltersButton');\r\n    const gameListTitle = document.getElementById('gameListTitle'); // Get the game list title element\r\n    gamesContainer.style.display = 'none';\r\n    gameDetailsContainer.style.display = 'none';\r\n    profilePageContainer.style.display = 'block';\r\n    decadeDropdown.style.display = 'none';\r\n    filterDropdown.style.display = 'none';\r\n    clearFiltersButton.style.display = 'none';\r\n    gameListTitle.style.display = 'none'; // Hide the game list title\r\n    profileGamesContainer.innerHTML = `\r\n        <div class=\"dropdown\" id=\"profileDropdown\">\r\n            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"profileMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Select Category\r\n            </button>\r\n            <ul class=\"dropdown-menu\" aria-labelledby=\"profileMenuButton\">\r\n                <li><a class=\"dropdown-item\" id=\"completedGames\" href=\"#\">Completed Games</a></li>\r\n                <li><a class=\"dropdown-item\" id=\"backloggedGames\" href=\"#\">Backlogged Games</a></li>\r\n            </ul>\r\n        </div>\r\n        <div id=\"profile-games-list\"></div>\r\n    `;\r\n    document.getElementById('completedGames').addEventListener('click', () => {\r\n        displayCompletedGames();\r\n        history.pushState({}, '', '?fromProfile=true&profileSection=completed');\r\n    });\r\n    document.getElementById('backloggedGames').addEventListener('click', () => {\r\n        displayBackloggedGames();\r\n        history.pushState({}, '', '?fromProfile=true&profileSection=backlogged');\r\n    });\r\n}\r\n\r\n// Function to display completed games\r\n// Function to display completed games\r\nfunction displayCompletedGames() {\r\n    const profileGamesContainer = document.getElementById('profile-games-list');\r\n    profileGamesContainer.innerHTML = ''; // Clear previous results\r\n    completedGames.forEach(game => {\r\n        const gameElement = document.createElement('div');\r\n        gameElement.className = 'game';\r\n        const gameImage = document.createElement('img');\r\n        gameImage.src = game.background_image;\r\n        gameImage.alt = `${game.name} cover image`;\r\n        gameImage.addEventListener('click', () => loadGameDetails(game.id, true, 'completed')); // Add event listener to load game details\r\n        const gameDetails = document.createElement('div');\r\n        gameDetails.className = 'game-details';\r\n        const gameTitle = document.createElement('div');\r\n        gameTitle.className = 'game-title';\r\n        gameTitle.textContent = game.name;\r\n        const gameReleaseDate = document.createElement('div');\r\n        gameReleaseDate.className = 'game-release-date';\r\n        gameReleaseDate.textContent = `Released: ${game.released}`;\r\n        const gamePlatforms = document.createElement('div');\r\n        gamePlatforms.className = 'game-platforms';\r\n        gamePlatforms.textContent = `Available Platforms: ${game.platforms.map(p => p.platform.name).join(', ')}`;\r\n        const gameGenres = document.createElement('div');\r\n        gameGenres.className = 'game-genres';\r\n        gameGenres.textContent = `Genres: ${game.genres.map(g => g.name).join(', ')}`;\r\n        // Add remove button\r\n        const removeButton = document.createElement('button');\r\n        removeButton.className = 'btn-remove';\r\n        removeButton.textContent = 'Remove from Completed';\r\n        removeButton.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            removeGameFromCompleted(game.id);\r\n        });\r\n\r\n        // Add rating display\r\n        const savedRating = localStorage.getItem(`rating-${game.id}`) || 0;\r\n        const ratingDisplay = `\r\n            <div class=\"rating-display\">\r\n                ${[1, 2, 3, 4, 5].map(rating => `\r\n                    <span class=\"rating-star ${rating <= savedRating ? 'rated' : ''}\">&#9733;</span>\r\n                `).join('')}\r\n            </div>\r\n        `;\r\n\r\n        gameDetails.appendChild(gameTitle);\r\n        gameDetails.appendChild(gameReleaseDate);\r\n        gameDetails.appendChild(gamePlatforms);\r\n        gameDetails.appendChild(gameGenres);\r\n        gameDetails.appendChild(removeButton);\r\n        gameDetails.insertAdjacentHTML('beforeend', ratingDisplay);\r\n        gameElement.appendChild(gameImage);\r\n        gameElement.appendChild(gameDetails);\r\n        profileGamesContainer.appendChild(gameElement);\r\n    });\r\n}\r\n// Function to display backlogged games\r\nfunction displayBackloggedGames() {\r\n    const profileGamesContainer = document.getElementById('profile-games-list');\r\n    profileGamesContainer.innerHTML = ''; // Clear previous results\r\n    backloggedGames.forEach(game => {\r\n        const gameElement = document.createElement('div');\r\n        gameElement.className = 'game';\r\n        const gameImage = document.createElement('img');\r\n        gameImage.src = game.background_image;\r\n        gameImage.alt = `${game.name} cover image`;\r\n        gameImage.addEventListener('click', () => loadGameDetails(game.id, true, 'backlogged')); // Add event listener to load game details\r\n        const gameDetails = document.createElement('div');\r\n        gameDetails.className = 'game-details';\r\n        const gameTitle = document.createElement('div');\r\n        gameTitle.className = 'game-title';\r\n        gameTitle.textContent = game.name;\r\n        const gameReleaseDate = document.createElement('div');\r\n        gameReleaseDate.className = 'game-release-date';\r\n        gameReleaseDate.textContent = `Released: ${game.released}`;\r\n        const gamePlatforms = document.createElement('div');\r\n        gamePlatforms.className = 'game-platforms';\r\n        gamePlatforms.textContent = `Available Platforms: ${game.platforms.map(p => p.platform.name).join(', ')}`;\r\n        const gameGenres = document.createElement('div');\r\n        gameGenres.className = 'game-genres';\r\n        gameGenres.textContent = `Genres: ${game.genres.map(g => g.name).join(', ')}`;\r\n        // Add remove button\r\n        const removeButton = document.createElement('button');\r\n        removeButton.className = 'btn-remove';\r\n        removeButton.textContent = 'Remove from Backlogged';\r\n        removeButton.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            removeGameFromBacklogged(game.id);\r\n        });\r\n        gameDetails.appendChild(gameTitle);\r\n        gameDetails.appendChild(gameReleaseDate);\r\n        gameDetails.appendChild(gamePlatforms);\r\n        gameDetails.appendChild(gameGenres);\r\n        gameDetails.appendChild(removeButton);\r\n        gameElement.appendChild(gameImage);\r\n        gameElement.appendChild(gameDetails);\r\n        profileGamesContainer.appendChild(gameElement);\r\n    });\r\n}\r\n// Function to go back to the main page\r\nfunction goBack() {\r\n    const gamesContainer = document.getElementById('games');\r\n    const gameDetailsContainer = document.getElementById('game-details');\r\n    const profilePageContainer = document.getElementById('profile-page');\r\n    const profileGamesContainer = document.getElementById('profile-games');\r\n    const decadeDropdown = document.getElementById('decadeDropdown');\r\n    const filterDropdown = document.getElementById('filterDropdown');\r\n    const clearFiltersButton = document.getElementById('clearFiltersButton');\r\n    const gameListTitle = document.getElementById('gameListTitle'); // Get the game list title element\r\n    // Check if the user was on the profile page\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const fromProfile = urlParams.get('fromProfile');\r\n    const profileSection = urlParams.get('profileSection');\r\n    if (fromProfile) {\r\n        // If the user came from the profile page\r\n        gamesContainer.style.display = 'none';\r\n        profilePageContainer.style.display = 'block';\r\n        profileDropdown.style.display = 'block';\r\n        decadeDropdown.style.display = 'none';\r\n        filterDropdown.style.display = 'none';\r\n        clearFiltersButton.style.display = 'none';\r\n        gameDetailsContainer.style.display = 'none';\r\n        gameListTitle.style.display = 'none'; // Hide the game list title\r\n        if (profileSection === 'completed') {\r\n            displayCompletedGames();\r\n            history.pushState({}, '', '?fromProfile=true&profileSection=completed');\r\n        } else if (profileSection === 'backlogged') {\r\n            displayBackloggedGames();\r\n            history.pushState({}, '', '?fromProfile=true&profileSection=backlogged');\r\n        }\r\n    } else {\r\n        // Default behavior: go back to the main page and default to \"all decades\"\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=4,18,1,7`;\r\n        callAPI(1); // Load games with \"all decades\" option\r\n        gamesContainer.style.display = 'block';\r\n        profilePageContainer.style.display = 'none';\r\n        gameDetailsContainer.style.display = 'none';\r\n        decadeDropdown.style.display = 'block';\r\n        filterDropdown.style.display = 'block';\r\n        clearFiltersButton.style.display = 'block';\r\n        gameListTitle.style.display = 'block'; // Show the game list title\r\n        history.pushState({}, '', './');\r\n    }\r\n}\r\n// Function to remove game from completed list\r\nfunction removeGameFromCompleted(gameId) {\r\n    completedGames = completedGames.filter(game => game.id !== gameId);\r\n    localStorage.setItem('completedGames', JSON.stringify(completedGames));\r\n    displayCompletedGames(); // Refresh the list\r\n}\r\n// Function to remove game from backlogged list\r\nfunction removeGameFromBacklogged(gameId) {\r\n    backloggedGames = backloggedGames.filter(game => game.id !== gameId);\r\n    localStorage.setItem('backloggedGames', JSON.stringify(backloggedGames));\r\n    displayBackloggedGames(); // Refresh the list\r\n}\r\n// Event listener for the search form\r\ndocument.getElementById('searchForm').addEventListener('submit', (event) => {\r\n    event.preventDefault(); // Prevent default form submission\r\n    const query = document.getElementById('searchInput').value;\r\n    callAPI(1, query); // Reset to page 1 when performing a new search\r\n});\r\ndocument.getElementById('profileButton').addEventListener('click', (event) => {\r\n    event.preventDefault(); // Prevent default behavior\r\n    displayProfilePage();\r\n});\r\ndocument.getElementById('clearFiltersButton').addEventListener('click', (event) => {\r\n    event.preventDefault(); // Prevent default behavior\r\n    baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=4,18,1,7`; // Reset to all platforms\r\n    callAPI(1); // Reset to page 1 and load all games without filters\r\n});\r\ndocument.getElementById('homeLink').addEventListener('click', (event) => {\r\n    event.preventDefault(); // Prevent default behavior\r\n    \r\n    // Display main page elements\r\n    const gamesContainer = document.getElementById('games');\r\n    const gameDetailsContainer = document.getElementById('game-details');\r\n    const profilePageContainer = document.getElementById('profile-page');\r\n    const decadeDropdown = document.getElementById('decadeDropdown');\r\n    const filterDropdown = document.getElementById('filterDropdown');\r\n    const clearFiltersButton = document.getElementById('clearFiltersButton');\r\n    const gameListTitle = document.getElementById('gameListTitle'); // Get the game list title element\r\n    gamesContainer.style.display = 'block';\r\n    gameDetailsContainer.style.display = 'none';\r\n    profilePageContainer.style.display = 'none';\r\n    decadeDropdown.style.display = 'block';\r\n    filterDropdown.style.display = 'block';\r\n    clearFiltersButton.style.display = 'block';\r\n    gameListTitle.style.display = 'block'; // Show the game list title\r\n    // Update URL and call API to load all games\r\n    history.pushState({}, '', './');\r\n    baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=4,18,1,7`; // Reset baseUrl to default\r\n    callAPI(1); // Load games with default filters\r\n});\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Event listeners for pagination buttons\r\n    for (let i = 1; i <= 8; i++) { // Assuming you have 8 buttons\r\n        const button = document.getElementById(`page-${i}`);\r\n        if (button) {\r\n            button.addEventListener('click', (event) => {\r\n                event.preventDefault(); // Prevent default behavior\r\n                callAPI(i);\r\n            });\r\n        }\r\n    }\r\n    // Event listeners for decade buttons\r\n    document.getElementById('decade-2000').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2000-01-01,2009-12-31&platforms=18,1,7`;\r\n        callAPI(1); // Reset to page 1 when changing decades\r\n    });\r\n    document.getElementById('decade-2010').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2010-01-01,2019-12-31&platforms=18,1,7`;\r\n        callAPI(1); // Reset to page 1 when changing decades\r\n    });\r\n    document.getElementById('decade-2020').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2020-01-01,2023-12-31&platforms=18,1,7`;\r\n        callAPI(1); // Reset to page 1 when changing decades\r\n    });\r\n    document.getElementById('all-decades').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=4,18,1,7`; // All platforms\r\n        callAPI(1); // Reset to page 1 when selecting all decades\r\n    });\r\n    // Event listeners for filter buttons (platforms)\r\n    document.getElementById('platform-pc').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=4`; // PC platform ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('platform-playstation').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=18`; // PlayStation platform ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('platform-xbox').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=1`; // Xbox platform ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('platform-nintendo').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=7`; // Nintendo platform ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('platform-all').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&platforms=4,18,1,7`; // All platforms\r\n        callAPI(1);\r\n    });\r\n    // Event listeners for filter buttons (genres)\r\n    document.getElementById('genre-action').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&genres=4`; // Action genre ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('genre-adventure').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&genres=3`; // Adventure genre ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('genre-rpg').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&genres=5`; // RPG genre ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('genre-strategy').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&genres=10`; // Strategy genre ID\r\n        callAPI(1);\r\n    });\r\n    document.getElementById('genre-all').addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&genres=4,3,5,10`; // All genres\r\n        callAPI(1);\r\n    });\r\n    // Handle browser back/forward buttons\r\n    window.addEventListener('popstate', (event) => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const gameId = urlParams.get('game');\r\n        if (gameId) {\r\n            loadGameDetails(gameId);\r\n        } else {\r\n            goBack();\r\n        }\r\n    });\r\n    // Check if URL has game query parameter\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const gameId = urlParams.get('game');\r\n    const fromProfile = urlParams.get('fromProfile');\r\n    const profileSection = urlParams.get('profileSection');\r\n    if (gameId) {\r\n        loadGameDetails(gameId);\r\n    } else if (fromProfile) {\r\n        goBack();\r\n    } else {\r\n        // Initial API call\r\n        callAPI(1); // Ensure it starts with page 1\r\n    }\r\n});"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}