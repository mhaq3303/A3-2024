{"mappings":"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","sources":["src/script.js"],"sourcesContent":["const apiKey = '91574a6ba1164bd5a7cb766c4251213b';\r\nlet baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2010-01-01,2019-12-31&platforms=18,1,7`;\r\nlet currentPage = 1;\r\nlet totalPages = 1;\r\n\r\n// Function to call the API\r\nasync function callAPI(page) {\r\n    try {\r\n        const response = await fetch(`${baseUrl}&page=${page}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Network response was not ok: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log(data.results); // Log the array of games\r\n        totalPages = Math.ceil(data.count / data.results.length);\r\n        displayGames(data.results);\r\n        currentPage = page; // Update currentPage after successful fetch\r\n        updatePaginationButtons();\r\n    } catch (error) {\r\n        handleFetchError(error);\r\n    }\r\n}\r\n\r\n// Function to display games\r\nfunction displayGames(games) {\r\n    const gamesContainer = document.getElementById('games');\r\n    gamesContainer.innerHTML = ''; // Clear previous results\r\n    games.forEach(game => {\r\n        const gameElement = document.createElement('div');\r\n        gameElement.className = 'game';\r\n\r\n        const gameImage = document.createElement('img');\r\n        gameImage.src = game.background_image;\r\n        gameImage.alt = `${game.name} cover image`;\r\n        gameImage.addEventListener('click', () => loadGameDetails(game.id));\r\n\r\n        const gameDetails = document.createElement('div');\r\n        gameDetails.className = 'game-details';\r\n\r\n        const gameTitle = document.createElement('div');\r\n        gameTitle.className = 'game-title';\r\n        gameTitle.textContent = game.name;\r\n\r\n        const gameReleaseDate = document.createElement('div');\r\n        gameReleaseDate.className = 'game-release-date';\r\n        gameReleaseDate.textContent = `Released: ${game.released}`;\r\n\r\n        const gamePlatforms = document.createElement('div');\r\n        gamePlatforms.className = 'game-platforms';\r\n        gamePlatforms.textContent = `Available Platforms: ${game.platforms.map(p => p.platform.name).join(', ')}`;\r\n\r\n        const gameGenres = document.createElement('div');\r\n        gameGenres.className = 'game-genres';\r\n        gameGenres.textContent = `Genres: ${game.genres.map(g => g.name).join(', ')}`;\r\n\r\n        gameDetails.appendChild(gameTitle);\r\n        gameDetails.appendChild(gameReleaseDate);\r\n        gameDetails.appendChild(gamePlatforms);\r\n        gameDetails.appendChild(gameGenres);\r\n        gameElement.appendChild(gameImage);\r\n        gameElement.appendChild(gameDetails);\r\n        gamesContainer.appendChild(gameElement);\r\n    });\r\n}\r\n\r\n// Function to update pagination buttons\r\nfunction updatePaginationButtons() {\r\n    for (let i = 1; i <= 8; i++) { // Assuming you have 8 buttons\r\n        const button = document.getElementById(`page-${i}`);\r\n        if (button) {\r\n            button.disabled = (i === currentPage);\r\n            button.style.display = i <= totalPages ? 'inline-block' : 'none'; // Show only the necessary buttons\r\n        }\r\n    }\r\n}\r\n\r\n// Function to load game details\r\nasync function loadGameDetails(gameId) {\r\n    try {\r\n        console.log(`Loading details for game ID: ${gameId}`); // Debugging\r\n        const response = await fetch(`https://api.rawg.io/api/games/${gameId}?key=${apiKey}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Network response was not ok: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        displayGameDetails(data);\r\n        history.pushState({ gameId }, '', `?game=${gameId}`);\r\n    } catch (error) {\r\n        handleFetchError(error);\r\n    }\r\n}\r\n\r\n// Function to handle fetch errors\r\nfunction handleFetchError(error) {\r\n    if (error.message.includes('67ee4b4236c76bdd')) {\r\n        console.warn('Ignoring content key error:', error.message);\r\n    } else {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n    }\r\n}\r\n\r\nfunction displayGameDetails(game) {\r\n    const gamesContainer = document.getElementById('games');\r\n    const gameDetailsContainer = document.getElementById('game-details');\r\n    gamesContainer.style.display = 'none';\r\n    gameDetailsContainer.style.display = 'block';\r\n\r\n    const developers = game.developers.map(dev => dev.name).join(', ');\r\n    const publishers = game.publishers.map(pub => pub.name).join(', ');\r\n    const metascore = game.metacritic;\r\n\r\n    gameDetailsContainer.innerHTML = `\r\n        <div class=\"game-details-page\">\r\n            <h2>${game.name}</h2>\r\n            <img src=\"${game.background_image}\" alt=\"${game.name} cover image\" />\r\n            <p><strong>Released:</strong> ${game.released}</p>\r\n            <p><strong>Available Platforms:</strong> ${game.platforms.map(p => p.platform.name).join(', ')}</p>\r\n            <p><strong>Genres:</strong> ${game.genres.map(g => g.name).join(', ')}</p>\r\n            <p><strong>Developers:</strong> ${developers}</p>\r\n            <p><strong>Publishers:</strong> ${publishers}</p>\r\n            <p><strong>Metascore:</strong> ${metascore}</p>\r\n            <p>${game.description_raw}</p>\r\n            <button class=\"btn btn-secondary\" onclick=\"goBack()\">Go Back</button>\r\n        </div>\r\n    `;\r\n}\r\n\r\n// Function to go back to the main page\r\nfunction goBack() {\r\n    const gamesContainer = document.getElementById('games');\r\n    const gameDetailsContainer = document.getElementById('game-details');\r\n    gamesContainer.style.display = 'block';\r\n    gameDetailsContainer.style.display = 'none';\r\n    history.pushState({}, '', './');\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Event listeners for pagination buttons\r\n    for (let i = 1; i <= 8; i++) { // Assuming you have 8 buttons\r\n        const button = document.getElementById(`page-${i}`);\r\n        if (button) {\r\n            button.addEventListener('click', (event) => {\r\n                event.preventDefault(); // Prevent default behavior\r\n                callAPI(i);\r\n            });\r\n        }\r\n    }\r\n\r\n    // Event listeners for decade buttons\r\n    document.getElementById('decade-2000').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2000-01-01,2009-12-31&platforms=18,1,7`;\r\n        callAPI(1); // Reset to page 1 when changing decades\r\n    });\r\n\r\n    document.getElementById('decade-2010').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2010-01-01,2019-12-31&platforms=18,1,7`;\r\n        callAPI(1); // Reset to page 1 when changing decades\r\n    });\r\n\r\n    document.getElementById('decade-2020').addEventListener('click', (event) => {\r\n        event.preventDefault(); // Prevent default behavior\r\n        baseUrl = `https://api.rawg.io/api/games?key=${apiKey}&dates=2020-01-01,2023-12-31&platforms=18,1,7`;\r\n        callAPI(1); // Reset to page 1 when changing decades\r\n    });\r\n\r\n    // Handle browser back/forward buttons\r\n    window.addEventListener('popstate', (event) => {\r\n        if (event.state && event.state.gameId) {\r\n            loadGameDetails(event.state.gameId);\r\n        } else {\r\n            goBack();\r\n        }\r\n    });\r\n\r\n    // Check if URL has game query parameter\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const gameId = urlParams.get('game');\r\n    if (gameId) {\r\n        loadGameDetails(gameId);\r\n    } else {\r\n        // Initial API call\r\n        callAPI(currentPage);\r\n    }\r\n});\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}